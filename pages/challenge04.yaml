title:      "Challenge 04: Sam's Search"
icon:       fa-code
navigation: []
internal:
external:
body:       |

    <img src="static/img/challenge04-array.png" class="pull-right" width="200px">

    Not content with a job at a **hot** Silicon Valley startup, **Sam** is
    still grinding **hard** on [LeetCode] challenges[^1] in hopes of leveling
    up to another software engineering gig.  In fact, he was *geeking* out on
    their [30-day Challenge] during the month of May and came across this problem:

    > Suppose an array sorted in ascending order is rotated at some pivot
    > unknown to you beforehand.
    >
    > (i.e., `[0,1,2,4,5,6,7]` might become `[4,5,6,7,0,1,2]`).
    >
    > You are given a `target` value to search. If found in the array report its
    > `index`, otherwise report it is not found.
    >
    > You may assume no duplicates exist in the array.

    Because *Sam* is busy networking with people on [LinkedIn], he asks that
    you repay him for the help he provided you in [Systems Programming] by
    coding up a solution to this problem for him.

    <div class="alert alert-warning" markdown="1">
    **Note**: Your algorithm's runtime complexity must be in the order of `O(log n)`.
    </div>

    [30-day Challenge]: https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/

    <div class="alert alert-info" markdown="1">
    #### <i class="fa fa-code"></i> LeetCode

    This programming challenge is based on [33. Search in Rotated Sorted
    Array](https://leetcode.com/problems/search-in-rotated-sorted-array/) from
    [LeetCode].

    </div>

    ## Input

    Each input test case will consist of two lines.  The first line contains
    the sorted but rotated `array`, while the second line contains the `target`
    to search for within the `array`.

    Here is an example input:

        ::text
        4 5 6 7 0 1 2
        0
        4 5 6 7 0 1 2
        3
        3 5 1
        3

    ## Output

    For each input test case, you are to output a message in the following
    format if the `target` is found:

        :::text
        {target} found at index {index}

    If the `target` is not in the `array`, then report:

        :::text
        {target} was not found

    Here is the output for the example input above:

        ::text
        0 found at index 4
        3 was not found
        3 found at index 0

    <div class="alert alert-danger" markdown="1">
    #### <i class="fa fa-balance-scale"></i> Algorithmic Complexity

    For each input test case, your solution should have the following targets:

    <table class="table table-striped table-bordered" style="background-color: white" markdown="1">
      <tbody>
        <tr>
          <td width="125px">**Time Complexity**</td>
          <td>`O(log(N))`, where `N` is the length of each input array.</td>
        </tr>
        <tr>
          <td>**Space Complexity**</td>
          <td>`O(log(N))`, where `N` is the length of each input array.</td>
        </tr>
      </tbody>
    </table>

    Your solution may be below the targets, but it **should not exceed them**.

    </div>

    ## Submission

    To submit your work, follow the same procedure you used for [Reading 01]:

        :::bash
        $ cd path/to/cse-34872-su21-assignments     # Go to assignments repository
        $ git checkout master                       # Make sure we are on master
        $ git pull --rebase                         # Pull any changes from GitHub

        $ git checkout -b challenge04               # Create and checkout challenge04 branch

        $ $EDITOR challenge04/program.cpp           # Edit your code

        $ git add challenge04/program.cpp           # Stage your changes
        $ git commit -m "challenge04: done"         # Commit your changes

        $ git push -u origin challenge04            # Send changes to GitHub

    To check your code, you can use the `.scripts/check.py` script or [curl]:

        :::bash
        $ .scripts/check.py
        Checking challenge04 program.cpp ...
          Result Success
            Time 0.16
           Score 6.00 / 6.00

        $ curl -F source=@challenge04/program.cpp https://dredd.h4x0r.space/code/cse-34872-su21/challenge04
        {"result": "Success", "score": 6, "time": 0.16451787948608398, "value": 6, "status": 0}

    <div class="alert alert-success" markdown="1">
    #### <i class="fa fa-github"></i> Pull Request

    Once you have commited your work and pushed it to [GitHub], remember to
    create a **pull request** and assign it to the **teaching assistant**.
    </div>

    [GitHub]:           https://github.com
    [HackerRank]:       https://www.hackerrank.com
    [LeetCode]:         https://leetcode.com
    [Reading 01]:       reading01.html
    [curl]:             https://curl.haxx.se/

    [Systems Programming]:  https://www3.nd.edu/~pbui/teaching/cse.20289.sp20
    [LinkedIn]: https://www.linkedin.com/in/samuelbattalio

    [^1]: You are welcome to do a [LeetCode] weekly challenge as one of your
    **External** programming contests for the course.

